generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  username String
  password String
  siswa    Siswa?  @relation(fields: [siswaId], references: [id])
  role     Role
  siswaId  String? @db.ObjectId
}

model Guru {
  id        String      @id @default(auto()) @map("_id") @db.ObjectId
  nama      String
  Kelas     Kelas[]
  Pelajaran Pelajaran[]
}

model Siswa {
  id      String  @id @default(auto()) @map("_id") @db.ObjectId
  nisn    String  @unique
  nama    String
  kelas   Kelas   @relation(fields: [kelasId], references: [id])
  Nilai   Nilai[]
  kelasId String  @db.ObjectId
  User    User[]
}

enum Role {
  ADMIN
  USER
}

model Berita {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  title   String
  image   String
  artikel Bytes
  tanggal DateTime @default(now())
}

model Kelas {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  kelas     String
  waliKelas Guru    @relation(fields: [guruId], references: [id])
  guruId    String  @db.ObjectId
  Siswa     Siswa[]
}

model Nilai {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  nilai       Int
  siswa       Siswa     @relation(fields: [siswaId], references: [id])
  siswaId     String    @db.ObjectId
  pelajaran   Pelajaran @relation(fields: [pelajaranId], references: [id])
  pelajaranId String    @db.ObjectId
}

model Pelajaran {
  id     String  @id @default(auto()) @map("_id") @db.ObjectId
  nama   String
  guru   Guru    @relation(fields: [guruId], references: [id])
  guruId String  @db.ObjectId
  Nilai  Nilai[]
}
